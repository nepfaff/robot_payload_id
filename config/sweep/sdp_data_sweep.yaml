# Sweep over data sources and data processing parameters

program: scripts/solve_inertial_param_sdp.py
method: bayes

metric:
  goal: minimize
  name: sdp_cost

parameters:
  joint_data_path:
    values: [
      # joint_data/real/excitation_only/iiwa_only/fourier_10s_40k_averaged,
      # joint_data/real/excitation_only/iiwa_only/fourier_10s_40k_averaged20,
      # joint_data/real/excitation_only/iiwa_only/fourier_10s_40k_averaged30,
      joint_data/real/excitation_only/iiwa_only/fourier_10s_100k_20al_averaged,
    ]
  not_filter_positions:
    values: [false]
  pos_order:
    values: [10]
    # distribution: int_uniform
    # min: 2
    # max: 30
  pos_cutoff_freq_hz:
    distribution: uniform
    min: 30.0
    max: 90.0
  vel_order:
    values: [10]
    # distribution: int_uniform
    # min: 2
    # max: 30
  vel_cutoff_freq_hz:
    distribution: uniform
    min: 5.0
    max: 30.0
  acc_order:
    values: [10]
    # distribution: int_uniform
    # min: 2
    # max: 30
  acc_cutoff_freq_hz:
    distribution: uniform
    min: 3.0
    max: 60.0
  torque_order:
    values: [10]
    # distribution: int_uniform
    # min: 2
    # max: 30
  torque_cutoff_freq_hz:
    distribution: uniform
    min: 1.5
    max: 25.0

command:
  - ${env}
  - python
  - ${program}
  - --wandb_mode=online
  - --regularization_weight=0.001
  - --process_joint_data
  - --not_perform_eval
  # Providing a pre-computed base parameter mapping leads to a massive speedup
  - --base_param_mapping=logs/base_param_mapping.npy
  - ${args_no_boolean_flags}
